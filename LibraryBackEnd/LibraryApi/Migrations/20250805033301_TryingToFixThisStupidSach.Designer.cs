// <auto-generated />
using System;
using LibraryApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApi.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20250805033301_TryingToFixThisStupidSach")]
    partial class TryingToFixThisStupidSach
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("LibraryApi.Models.BaoCao", b =>
                {
                    b.Property<int>("MaBaoCao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("FilePDF")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("LoaiBaoCao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayLap")
                        .HasColumnType("TEXT");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaBaoCao");

                    b.ToTable("BaoCaos");
                });

            modelBuilder.Entity("LibraryApi.Models.BaoCaoViPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("MaDocGia")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaPhieuMuon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaSach")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaViPham")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("MoTaViPham")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("MucDoViPham")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayViPham")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayXuLy")
                        .HasColumnType("TEXT");

                    b.Property<string>("NguoiXuLy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("SoNgayTre")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("SoTienPhat")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MaDocGia");

                    b.HasIndex("MaPhieuMuon");

                    b.HasIndex("MaSach");

                    b.ToTable("BaoCaoViPhams");
                });

            modelBuilder.Entity("LibraryApi.Models.CT_KiemKe", b =>
                {
                    b.Property<int>("MaPhieuKK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaSach")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChenhLech")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PhieuKiemKeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SL_HeThong")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SL_ThucTe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SachMaSach")
                        .HasColumnType("INTEGER");

                    b.HasKey("MaPhieuKK", "MaSach");

                    b.HasIndex("PhieuKiemKeId");

                    b.HasIndex("SachMaSach");

                    b.ToTable("CT_KiemKe");
                });

            modelBuilder.Entity("LibraryApi.Models.CT_PhieuMuon", b =>
                {
                    b.Property<int>("MaPhieuMuon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaSach")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PhieuTraMaPhieuTra")
                        .HasColumnType("INTEGER");

                    b.HasKey("MaPhieuMuon", "MaSach");

                    b.HasIndex("MaSach");

                    b.HasIndex("PhieuTraMaPhieuTra");

                    b.ToTable("CT_PhieuMuons");
                });

            modelBuilder.Entity("LibraryApi.Models.CT_PhieuTra", b =>
                {
                    b.Property<int>("MaPhieuTra")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaSach")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NgayTraThucTe")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SoNgayMuon")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("TienPhat")
                        .HasColumnType("TEXT");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaPhieuTra", "MaSach");

                    b.HasIndex("MaSach");

                    b.ToTable("CT_PhieuTras");
                });

            modelBuilder.Entity("LibraryApi.Models.ChiTietDeXuatMuaSach", b =>
                {
                    b.Property<int>("MaChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("TEXT");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("MaDeXuat")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NamXuatBan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NhaXuatBan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("SoLuong")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TacGia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("TheLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("MaChiTiet");

                    b.HasIndex("MaDeXuat");

                    b.ToTable("ChiTietDeXuatMuaSachs");
                });

            modelBuilder.Entity("LibraryApi.Models.ChiTietPhieuKiemKe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChenhLech")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("MaSach")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PhieuKiemKeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoLuongHeThong")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoLuongThucTe")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MaSach");

                    b.HasIndex("PhieuKiemKeId");

                    b.ToTable("ChiTietPhieuKiemKes");
                });

            modelBuilder.Entity("LibraryApi.Models.ChiTietPhieuNhapKho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaSach")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("PhieuNhapKhoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoLuong")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PhieuNhapKhoId");

                    b.ToTable("ChiTietPhieuNhapKhos");
                });

            modelBuilder.Entity("LibraryApi.Models.DatTruocSach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HanLaySach")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaDatTruoc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("MaDocGia")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaPhieuMuon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaSach")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("NgayDatTruoc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayXuLy")
                        .HasColumnType("TEXT");

                    b.Property<string>("NguoiXuLy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MaDocGia");

                    b.HasIndex("MaPhieuMuon");

                    b.HasIndex("MaSach");

                    b.ToTable("DatTruocSaches");
                });

            modelBuilder.Entity("LibraryApi.Models.DocGia", b =>
                {
                    b.Property<int>("MaDG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CapBac")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LoaiDocGia")
                        .HasColumnType("TEXT");

                    b.Property<string>("LyDoKhoa")
                        .HasColumnType("TEXT");

                    b.Property<string>("MemberStatus")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayDangKy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayKhoa")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PhiThanhVien")
                        .HasColumnType("TEXT");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SoLanGiaHanToiDa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoNgayGiaHan")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoNgayKhoa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoNgayMuonToiDa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoSachToiDa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenDG")
                        .HasColumnType("TEXT");

                    b.HasKey("MaDG");

                    b.ToTable("DocGias");
                });

            modelBuilder.Entity("LibraryApi.Models.NguoiDung", b =>
                {
                    b.Property<int>("MaND")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DocGiaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("TEXT");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaND");

                    b.HasIndex("DocGiaId");

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("LibraryApi.Models.NhatKyHoatDong", b =>
                {
                    b.Property<int>("MaNK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HanhDong")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaND")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("TEXT");

                    b.HasKey("MaNK");

                    b.HasIndex("MaND");

                    b.ToTable("NhatKyHoatDongs");
                });

            modelBuilder.Entity("LibraryApi.Models.PhanHoiNCC", b =>
                {
                    b.Property<int>("MaPhieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NgayGiaoDuKien")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayNhan")
                        .HasColumnType("TEXT");

                    b.Property<string>("NhaCungCap")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhanHoi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaPhieu");

                    b.ToTable("PhanHoiNCCs");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuCapQuyen", b =>
                {
                    b.Property<int>("MaPhieuQuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaND")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuyenDuocCap")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ThoiHan")
                        .HasColumnType("TEXT");

                    b.HasKey("MaPhieuQuyen");

                    b.HasIndex("MaND");

                    b.ToTable("PhieuCapQuyens");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuDatTruoc", b =>
                {
                    b.Property<int>("MaPhieuDat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaDG")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaSach")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NgayDat")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaPhieuDat");

                    b.HasIndex("MaDG");

                    b.HasIndex("MaSach");

                    b.ToTable("PhieuDatTruocs");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuDeXuatMuaSach", b =>
                {
                    b.Property<int>("MaDeXuat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ChiPhiDuKien")
                        .HasColumnType("TEXT");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LyDoTuChoi")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("MaNguoiDeXuat")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaNguoiDuyet")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("MucDoUuTien")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayDeXuat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayDuyet")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SachMaSach")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("MaDeXuat");

                    b.HasIndex("MaNguoiDeXuat");

                    b.HasIndex("MaNguoiDuyet");

                    b.HasIndex("SachMaSach");

                    b.ToTable("PhieuDeXuatMuaSachs");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuGiaHan", b =>
                {
                    b.Property<int>("MaGiaHan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LanGiaHan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LyDoTuChoi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaDG")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaPhieuMuon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaSach")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayDuyet")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayGiaHan")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayHetHanCu")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayHetHanMoi")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("TEXT");

                    b.Property<string>("NguoiDuyet")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SoNgayGiaHan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaGiaHan");

                    b.HasIndex("MaDG");

                    b.HasIndex("MaPhieuMuon");

                    b.HasIndex("MaSach");

                    b.ToTable("PhieuGiaHans");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuKiemKe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("KyKiemKe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayKiemKe")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("TEXT");

                    b.Property<string>("NhanVienThucHien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PhieuKiemKes");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuMuon", b =>
                {
                    b.Property<int>("MaPhieuMuon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DocGiaMaDG")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HanTra")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaDG")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayMuon")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayTra")
                        .HasColumnType("TEXT");

                    b.Property<string>("NguoiLap")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaPhieuMuon");

                    b.HasIndex("DocGiaMaDG");

                    b.HasIndex("MaDG");

                    b.ToTable("PhieuMuon");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuNhapKho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("MaPhieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("TEXT");

                    b.Property<string>("NhaCungCap")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PhieuNhapKhos");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuPhat", b =>
                {
                    b.Property<int>("MaPhieuPhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoaiPhat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaDG")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NgayLap")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SoTien")
                        .HasColumnType("TEXT");

                    b.HasKey("MaPhieuPhat");

                    b.HasIndex("MaDG");

                    b.ToTable("PhieuPhats");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuThu", b =>
                {
                    b.Property<int>("MaPhieuThu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaoCaoViPhamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("LoaiThu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("LoaiViPham")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaBaoCaoViPham")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaDG")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaGiaoDich")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaPhieuMuon")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaSach")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayThu")
                        .HasColumnType("TEXT");

                    b.Property<string>("NguoiThu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PhieuMuonMaPhieuMuon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SachMaSach")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SoNgayTre")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("TEXT");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("MaPhieuThu");

                    b.HasIndex("BaoCaoViPhamId");

                    b.HasIndex("MaDG");

                    b.HasIndex("PhieuMuonMaPhieuMuon");

                    b.HasIndex("SachMaSach");

                    b.ToTable("PhieuThus");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuTra", b =>
                {
                    b.Property<int>("MaPhieuTra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaDG")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaPhieuMuon")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NgayTra")
                        .HasColumnType("TEXT");

                    b.Property<string>("NguoiLap")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaPhieuTra");

                    b.HasIndex("MaDG");

                    b.HasIndex("MaPhieuMuon");

                    b.ToTable("PhieuTras");
                });

            modelBuilder.Entity("LibraryApi.Models.Sach", b =>
                {
                    b.Property<int>("MaSach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnhBia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("GiaSach")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("KeSach")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("NamXB")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayNhap")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("TEXT");

                    b.Property<string>("NhaXuatBan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TacGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TheLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ViTriLuuTru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("MaSach");

                    b.ToTable("Saches");
                });

            modelBuilder.Entity("LibraryApi.Models.TheThuVien", b =>
                {
                    b.Property<int>("MaThe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoaiThe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaDG")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NgayDK")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaThe");

                    b.HasIndex("MaDG")
                        .IsUnique();

                    b.ToTable("TheThuViens");
                });

            modelBuilder.Entity("LibraryApi.Models.BaoCaoViPham", b =>
                {
                    b.HasOne("LibraryApi.Models.DocGia", "DocGia")
                        .WithMany()
                        .HasForeignKey("MaDocGia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.PhieuMuon", "PhieuMuon")
                        .WithMany()
                        .HasForeignKey("MaPhieuMuon")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LibraryApi.Models.Sach", "Sach")
                        .WithMany()
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocGia");

                    b.Navigation("PhieuMuon");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("LibraryApi.Models.CT_KiemKe", b =>
                {
                    b.HasOne("LibraryApi.Models.PhieuKiemKe", "PhieuKiemKe")
                        .WithMany()
                        .HasForeignKey("PhieuKiemKeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.Sach", "Sach")
                        .WithMany()
                        .HasForeignKey("SachMaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuKiemKe");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("LibraryApi.Models.CT_PhieuMuon", b =>
                {
                    b.HasOne("LibraryApi.Models.PhieuMuon", "PhieuMuon")
                        .WithMany("CT_PhieuMuons")
                        .HasForeignKey("MaPhieuMuon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.Sach", "Sach")
                        .WithMany("CT_PhieuMuons")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.PhieuTra", "PhieuTra")
                        .WithMany()
                        .HasForeignKey("PhieuTraMaPhieuTra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuMuon");

                    b.Navigation("PhieuTra");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("LibraryApi.Models.CT_PhieuTra", b =>
                {
                    b.HasOne("LibraryApi.Models.PhieuTra", "PhieuTra")
                        .WithMany("CT_PhieuTras")
                        .HasForeignKey("MaPhieuTra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.Sach", "Sach")
                        .WithMany("CT_PhieuTras")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuTra");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("LibraryApi.Models.ChiTietDeXuatMuaSach", b =>
                {
                    b.HasOne("LibraryApi.Models.PhieuDeXuatMuaSach", "PhieuDeXuatMuaSach")
                        .WithMany("ChiTietDeXuatMuaSachs")
                        .HasForeignKey("MaDeXuat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuDeXuatMuaSach");
                });

            modelBuilder.Entity("LibraryApi.Models.ChiTietPhieuKiemKe", b =>
                {
                    b.HasOne("LibraryApi.Models.Sach", "Sach")
                        .WithMany("ChiTietPhieuKiemKes")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.PhieuKiemKe", "PhieuKiemKe")
                        .WithMany("ChiTietPhieuKiemKe")
                        .HasForeignKey("PhieuKiemKeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuKiemKe");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("LibraryApi.Models.ChiTietPhieuNhapKho", b =>
                {
                    b.HasOne("LibraryApi.Models.PhieuNhapKho", "PhieuNhapKho")
                        .WithMany("ChiTietPhieuNhapKho")
                        .HasForeignKey("PhieuNhapKhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuNhapKho");
                });

            modelBuilder.Entity("LibraryApi.Models.DatTruocSach", b =>
                {
                    b.HasOne("LibraryApi.Models.DocGia", "DocGia")
                        .WithMany()
                        .HasForeignKey("MaDocGia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.PhieuMuon", "PhieuMuon")
                        .WithMany()
                        .HasForeignKey("MaPhieuMuon")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LibraryApi.Models.Sach", "Sach")
                        .WithMany()
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocGia");

                    b.Navigation("PhieuMuon");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("LibraryApi.Models.NguoiDung", b =>
                {
                    b.HasOne("LibraryApi.Models.DocGia", "DocGia")
                        .WithMany()
                        .HasForeignKey("DocGiaId");

                    b.Navigation("DocGia");
                });

            modelBuilder.Entity("LibraryApi.Models.NhatKyHoatDong", b =>
                {
                    b.HasOne("LibraryApi.Models.NguoiDung", "NguoiDung")
                        .WithMany("NhatKyHoatDongs")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuCapQuyen", b =>
                {
                    b.HasOne("LibraryApi.Models.NguoiDung", "NguoiDung")
                        .WithMany("PhieuCapQuyens")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuDatTruoc", b =>
                {
                    b.HasOne("LibraryApi.Models.DocGia", "DocGia")
                        .WithMany("PhieuDatTruocs")
                        .HasForeignKey("MaDG")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.Sach", "Sach")
                        .WithMany("PhieuDatTruocs")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocGia");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuDeXuatMuaSach", b =>
                {
                    b.HasOne("LibraryApi.Models.NguoiDung", "NguoiDeXuat")
                        .WithMany()
                        .HasForeignKey("MaNguoiDeXuat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.NguoiDung", "NguoiDuyet")
                        .WithMany()
                        .HasForeignKey("MaNguoiDuyet");

                    b.HasOne("LibraryApi.Models.Sach", null)
                        .WithMany("PhieuDeXuatMuaSachs")
                        .HasForeignKey("SachMaSach");

                    b.Navigation("NguoiDeXuat");

                    b.Navigation("NguoiDuyet");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuGiaHan", b =>
                {
                    b.HasOne("LibraryApi.Models.DocGia", "DocGia")
                        .WithMany("PhieuGiaHans")
                        .HasForeignKey("MaDG")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.PhieuMuon", "PhieuMuon")
                        .WithMany("PhieuGiaHans")
                        .HasForeignKey("MaPhieuMuon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.Sach", "Sach")
                        .WithMany("PhieuGiaHans")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocGia");

                    b.Navigation("PhieuMuon");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuMuon", b =>
                {
                    b.HasOne("LibraryApi.Models.DocGia", null)
                        .WithMany("PhieuMus")
                        .HasForeignKey("DocGiaMaDG");

                    b.HasOne("LibraryApi.Models.DocGia", "DocGia")
                        .WithMany("PhieuMuons")
                        .HasForeignKey("MaDG")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocGia");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuPhat", b =>
                {
                    b.HasOne("LibraryApi.Models.DocGia", "DocGia")
                        .WithMany("PhieuPhats")
                        .HasForeignKey("MaDG")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocGia");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuThu", b =>
                {
                    b.HasOne("LibraryApi.Models.BaoCaoViPham", "BaoCaoViPham")
                        .WithMany()
                        .HasForeignKey("BaoCaoViPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.DocGia", "DocGia")
                        .WithMany("PhieuThus")
                        .HasForeignKey("MaDG")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.PhieuMuon", "PhieuMuon")
                        .WithMany()
                        .HasForeignKey("PhieuMuonMaPhieuMuon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.Sach", "Sach")
                        .WithMany()
                        .HasForeignKey("SachMaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaoCaoViPham");

                    b.Navigation("DocGia");

                    b.Navigation("PhieuMuon");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuTra", b =>
                {
                    b.HasOne("LibraryApi.Models.DocGia", "DocGia")
                        .WithMany("PhieuTras")
                        .HasForeignKey("MaDG")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApi.Models.PhieuMuon", "PhieuMuon")
                        .WithMany("PhieuTras")
                        .HasForeignKey("MaPhieuMuon")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocGia");

                    b.Navigation("PhieuMuon");
                });

            modelBuilder.Entity("LibraryApi.Models.TheThuVien", b =>
                {
                    b.HasOne("LibraryApi.Models.DocGia", "DocGia")
                        .WithOne("TheThuVien")
                        .HasForeignKey("LibraryApi.Models.TheThuVien", "MaDG")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocGia");
                });

            modelBuilder.Entity("LibraryApi.Models.DocGia", b =>
                {
                    b.Navigation("PhieuDatTruocs");

                    b.Navigation("PhieuGiaHans");

                    b.Navigation("PhieuMuons");

                    b.Navigation("PhieuMus");

                    b.Navigation("PhieuPhats");

                    b.Navigation("PhieuThus");

                    b.Navigation("PhieuTras");

                    b.Navigation("TheThuVien")
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryApi.Models.NguoiDung", b =>
                {
                    b.Navigation("NhatKyHoatDongs");

                    b.Navigation("PhieuCapQuyens");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuDeXuatMuaSach", b =>
                {
                    b.Navigation("ChiTietDeXuatMuaSachs");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuKiemKe", b =>
                {
                    b.Navigation("ChiTietPhieuKiemKe");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuMuon", b =>
                {
                    b.Navigation("CT_PhieuMuons");

                    b.Navigation("PhieuGiaHans");

                    b.Navigation("PhieuTras");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuNhapKho", b =>
                {
                    b.Navigation("ChiTietPhieuNhapKho");
                });

            modelBuilder.Entity("LibraryApi.Models.PhieuTra", b =>
                {
                    b.Navigation("CT_PhieuTras");
                });

            modelBuilder.Entity("LibraryApi.Models.Sach", b =>
                {
                    b.Navigation("CT_PhieuMuons");

                    b.Navigation("CT_PhieuTras");

                    b.Navigation("ChiTietPhieuKiemKes");

                    b.Navigation("PhieuDatTruocs");

                    b.Navigation("PhieuDeXuatMuaSachs");

                    b.Navigation("PhieuGiaHans");
                });
#pragma warning restore 612, 618
        }
    }
}
